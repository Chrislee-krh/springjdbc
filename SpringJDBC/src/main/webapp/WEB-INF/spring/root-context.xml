<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- root-context.xml에는 일반적으로 DB관련된 설정이 들어간다. -->
	<!-- 기본적으로 CLASSPATH의 경로가 src/main/resources를 기본으로 한다 -->
	
	<bean id="DBproperties"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:DBproperties/Hikari.properties"/>	
	</bean>
	
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="${ds.driverClassName}"/>
		<property name="jdbcUrl" value="${ds.url}"/>
		<property name="username" value="${ds.username}"/>
		<property name="password" value="${ds.password}"/>
		<property name="maximumPoolSize" value="10"/>
		<property name="maxLifetime" value="1800000"/>
	</bean>
	
	<!-- 사용할 CP는 Hikari CP 빈 등록하기 -->
	<!-- <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521/XEPDB1"/>
		<property name="username" value="spring"/>
		<property name="password" value="spring"/>
	</bean> -->
	
	<!-- 데이터 소스 설정 -->
	<bean id="ds" class="com.zaxxer.hikari.HikariDataSource">
		<constructor-arg ref="hikariConfig"/>
	</bean>
		
	<!-- jdbcTemplate 사용을 위한 bean 설정 -->	
	<!-- jdbcTemplate이름으로 객체 생성하고, 의존성 주입 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="ds" />
	</bean>
		
	<!-- MyBatis 핵심 객체 sqlSessionFactory 추가 -->
	<!-- 
	SessionFactory는 내부적으로 DB와 연결하고, pstmt와 SQL문을 바인딩 처리, 반복적인 close()작업또한 처리
	개발자 코드량을 줄이며, 효율적 작업 처리 가능
	 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ds" />
		<!-- <property name="mapperLocations" value="classpath:org/zerock/mapper/**/*.xml" /> -->
	</bean>
		
	<!-- mybatis의 테스트 mapper -->
	<mybatis-spring:scan base-package="org.zerock.testmapper"/>
	<mybatis-spring:scan base-package="org.zerock.mapper"/>
		
</beans>
